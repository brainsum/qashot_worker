version: "3.7"

x-dns-config:
  &dns-config
  dns:
    - ${PIHOLE_IP}
#    # Cloudflare
#    - 1.1.1.1
#    - 1.0.0.1
#    # OpenDNS
#    - 208.67.222.222
#    - 208.67.220.220
#    # Google
#    - 8.8.8.8
#    - 8.8.4.4

x-health-check:
  &health-check
  healthcheck:
    test: ["CMD", "node", "healthcheck.js"]
    interval: 10s
    timeout: 10s
    retries: 5

services:
  pihole:
    image: pihole/pihole:4.3.1-4
    dns:
      - 127.0.0.1
    networks:
      dns_server:
        ipv4_address: ${PIHOLE_IP}
    environment:
      TZ: 'Europe/Budapest'
      WEBPASSWORD: "${PIHOLE_PASSWD}"
      VIRTUAL_PORT: 80
      DNS1: 1.1.1.1
      DNS2: 1.0.0.1 # Maybe: no
#      ServerIP: ''
#    # Required for DHCP.
#    cap_add:
#      - NET_ADMIN
#    restart: unless-stopped
    volumes:
      - './runtime/pihole/pihole/:/etc/pihole/'
      - './runtime/pihole/dnsmasq.d/:/etc/dnsmasq.d/'
    # @todo: add depends_on: dns_server to workers
    labels:
      - "traefik.enable=true"
      - "traefik.backend=pihole"
      - "traefik.frontend.rule=Host:pihole.${PROJECT_BASE_URL},{catchall:.*}"
      - "traefik.frontend.priority=1"
      - "traefik.port=80"
      - "traefik.docker.network=${PROJECT_NAME}_dns_server"

  backstopjs_worker_chrome:
    image: brainsum/qashot-worker-backstopjs-chrome:0.11.1
    security_opt:
    - seccomp:unconfined
    # @todo: Might be needed.
#    cap_add:
#      - SYS_ADMIN
    environment:
    - "NODE_ENV=production"
    - "WORKER_BROWSER=chrome"
    - "WORKER_ENGINE=puppeteer"
    - "INTERNAL_RABBITMQ_URL=amqp://user:bitnami@internal_rabbitmq:${INTERNAL_RABBITMQ_PORT}"
    - "JWT_SECRET_KEY=${JWT_SECRET_KEY}"
    - "EXPOSED_PORT=10000"
    - "RESULTS_ENDPOINT_URL=${RESULTS_ENDPOINT_URL}"
    depends_on:
    - internal_rabbitmq
    restart: unless-stopped
    labels:
    - "traefik.enable=false"
    - "traefik.backend=backstopjs_worker_chrome"
    - "traefik.frontend.rule=Host:backstopjs-worker-chrome.${PROJECT_BASE_URL}"
    - "traefik.port=10000"
    - "traefik.backend.loadbalancer.method=drr"
    - "traefik.docker.network=${PROJECT_NAME}_chrome_worker_internal_rabbitmq"
    networks:
    - chrome_worker_internal_rabbitmq
    - chrome_worker_result_queue
    - dns_server
    volumes:
      - chrome_runtime:/home/node/app/runtime/chrome
    <<: *health-check
    <<: *dns-config

  backstopjs_worker_firefox:
    image: brainsum/qashot-worker-backstopjs-firefox:0.11.1
    environment:
    - "NODE_ENV=production"
    - "WORKER_BROWSER=firefox"
    - "WORKER_ENGINE=slimerjs"
    - "INTERNAL_RABBITMQ_URL=amqp://user:bitnami@internal_rabbitmq:${INTERNAL_RABBITMQ_PORT}"
    - "JWT_SECRET_KEY=${JWT_SECRET_KEY}"
    - "EXPOSED_PORT=10100"
    - "RESULTS_ENDPOINT_URL=${RESULTS_ENDPOINT_URL}"
    depends_on:
    - internal_rabbitmq
    restart: unless-stopped
    labels:
    - "traefik.enable=false"
    - "traefik.backend=backstopjs_worker_firefox"
    - "traefik.frontend.rule=Host:backstopjs-worker-firefox.${PROJECT_BASE_URL}"
    - "traefik.port=10100"
    - "traefik.backend.loadbalancer.method=drr"
    - "traefik.docker.network=${PROJECT_NAME}_firefox_worker_internal_rabbitmq"
    networks:
    - firefox_worker_internal_rabbitmq
    - firefox_worker_result_queue
    - dns_server
    volumes:
    - firefox_runtime:/home/node/app/runtime/firefox
    <<: *health-check
    <<: *dns-config

  backstopjs_worker_phantomjs:
    image: brainsum/qashot-worker-backstopjs-phantomjs:0.11.1
    environment:
    - "NODE_ENV=production"
    - "WORKER_BROWSER=phantomjs"
    - "WORKER_ENGINE=casper"
    - "INTERNAL_RABBITMQ_URL=amqp://user:bitnami@internal_rabbitmq:${INTERNAL_RABBITMQ_PORT}"
    - "JWT_SECRET_KEY=${JWT_SECRET_KEY}"
    - "EXPOSED_PORT=10200"
    - "RESULTS_ENDPOINT_URL=${RESULTS_ENDPOINT_URL}"
    depends_on:
    - internal_rabbitmq
    restart: unless-stopped
    labels:
    - "traefik.enable=false"
    - "traefik.backend=backstopjs_worker_phantomjs"
    - "traefik.frontend.rule=Host:backstopjs-worker-phantomjs.${PROJECT_BASE_URL}"
    - "traefik.port=10200"
    - "traefik.backend.loadbalancer.method=drr"
    - "traefik.docker.network=${PROJECT_NAME}_phantomjs_worker_internal_rabbitmq"
    networks:
    - phantomjs_worker_internal_rabbitmq
    - phantomjs_worker_result_queue
    - dns_server
    volumes:
    - phantomjs_runtime:/home/node/app/runtime/phantomjs
    <<: *health-check
    <<: *dns-config

  internal_rabbitmq:
    image: bitnami/rabbitmq:3.7.8
    environment:
    - "RABBITMQ_USERNAME=user"
    - "RABBITMQ_PASSWORD=bitnami"
    - "RABBITMQ_VHOST=/"
    - "RABBITMQ_NODE_TYPE=stats"
    - "RABBITMQ_NODE_PORT_NUMBER=${INTERNAL_RABBITMQ_PORT}"
    - "RABBITMQ_MANAGER_PORT_NUMBER=1${INTERNAL_RABBITMQ_PORT}"
    - "RABBITMQ_DISK_FREE_LIMIT={mem_relative, 1.0}"
    - "RABBITMQ_ULIMIT_NOFILES=65536"
    volumes:
    - ./runtime/internal_rabbitmq_data:/bitnami
    stop_grace_period: 10s
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:1${INTERNAL_RABBITMQ_PORT}"]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    networks:
    - frontend_internal_rabbitmq
    - chrome_worker_internal_rabbitmq
    - firefox_worker_internal_rabbitmq
    - phantomjs_worker_internal_rabbitmq
    labels:
    - "traefik.enable=false"
    - "traefik.port=${INTERNAL_RABBITMQ_PORT}"
    - "traefik.docker.network=${PROJECT_NAME}_backend"
    # - "traefik.backend=internal_rabbitmq"
    # - "traefik.frontend.rule=Host:internal-rabbitmq.${PROJECT_BASE_URL}"

  frontend:
    image: brainsum/qashot-worker-frontend:0.10.3
    environment:
    - "NODE_ENV=production"
    - "INTERNAL_RABBITMQ_URL=amqp://user:bitnami@internal_rabbitmq:${INTERNAL_RABBITMQ_PORT}"
    - "SUPPORTED_BROWSERS=chrome;firefox;phantomjs"
    - "JWT_SECRET_KEY=${JWT_SECRET_KEY}"
    - "EXPOSED_PORT=9900"
    depends_on:
    - internal_rabbitmq
    - result_queue
    restart: unless-stopped
    labels:
    - "traefik.enable=true"
    - "traefik.backend=frontend"
    - "traefik.frontend.rule=Host:${PROJECT_BASE_URL}"
    - "traefik.port=9900"
    - "traefik.docker.network=${PROJECT_NAME}_frontend"
    networks:
    - frontend
    - frontend_result_queue
    - frontend_internal_rabbitmq
    volumes:
    - type: volume
      source: chrome_runtime
      target: /home/node/app/runtime/chrome
      read_only: true
      volume:
        nocopy: true
    - type: volume
      source: firefox_runtime
      target: /home/node/app/runtime/firefox
      read_only: true
      volume:
        nocopy: true
    - type: volume
      source: phantomjs_runtime
      target: /home/node/app/runtime/phantomjs
      read_only: true
      volume:
        nocopy: true
    stop_grace_period: 10s
    <<: *health-check

  result_queue:
    image: brainsum/qashot-worker-result-queue:0.11.1
    environment:
    - "NODE_ENV=production"
    - "JWT_SECRET_KEY=${JWT_SECRET_KEY}"
    - "EXPOSED_PORT=9800"
    - "DB_USER=${RESULT_DB_USER}"
    - "DB_PASSWORD=${RESULT_DB_PASSWORD}"
    - "PROJECT_ENVIRONMENT=production"
    stop_grace_period: 10s
    restart: unless-stopped
    depends_on:
    - result_db
    networks:
    - frontend_result_queue
    - result_database
    - chrome_worker_result_queue
    - firefox_worker_result_queue
    - phantomjs_worker_result_queue
    labels:
    - "traefik.enable=false"
    - "traefik.backend=result_queue"
    - "traefik.frontend.rule=Host:results.${PROJECT_BASE_URL}"
    - "traefik.port=9800"
    - "traefik.docker.network=${PROJECT_NAME}_frontend_result_queue"
    <<: *health-check

  result_db:
    image: bitnami/postgresql:10.5.0
    container_name: "${PROJECT_NAME}_result_db"
    stop_grace_period: 10s
    restart: unless-stopped
    environment:
    - "POSTGRESQL_USERNAME=${RESULT_DB_USER}"
    - "POSTGRESQL_PASSWORD=${RESULT_DB_PASSWORD}"
    - "POSTGRESQL_DATABASE=result_db"
    volumes:
    - result_db_data:/bitnami
    networks:
    - result_database
    labels:
    - "traefik.enable=false"

  # Other.
  traefik:
    image: traefik:1.7.2-alpine
    container_name: "${PROJECT_NAME}_traefik"
    restart: unless-stopped
    ports:
    - "${TRAEFIK_HOST_PORT}:80"
    - "${TRAEFIK_HOST_SSL_PORT:-443}:443"
    networks:
    - frontend
    - frontend_result_queue
    - frontend_internal_rabbitmq
    - chrome_worker_result_queue
    - firefox_worker_result_queue
    - phantomjs_worker_result_queue
    - chrome_worker_internal_rabbitmq
    - firefox_worker_internal_rabbitmq
    - phantomjs_worker_internal_rabbitmq
    - result_database
    - dns_server
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    - ./traefik/traefik.toml:/etc/traefik/traefik.toml
    labels:
    - "traefik.enable=false"
    - "traefik.backend=traefik"
    - "traefik.frontend.rule=Host:traefik.${PROJECT_BASE_URL}"

networks:
  dns_server:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: ${DNS_SERVER_SUBNET}
  frontend: {}
  frontend_result_queue: {}
  frontend_internal_rabbitmq: {}
  chrome_worker_result_queue: {}
  firefox_worker_result_queue: {}
  phantomjs_worker_result_queue: {}
  chrome_worker_internal_rabbitmq: {}
  firefox_worker_internal_rabbitmq: {}
  phantomjs_worker_internal_rabbitmq: {}
  result_database: {}

volumes:
  chrome_runtime: {}
  phantomjs_runtime: {}
  firefox_runtime: {}
  result_db_data: {}
