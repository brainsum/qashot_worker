version: "3"
services:
  frontend:
    build:
      context: ./frontend
    image: brainsum/qashot_worker_frontend:0.1.3
    command: ["nodemon", "index.js"]
    environment:
      - NODE_ENV=development
    volumes:
      - ./frontend:/home/node/app
    ports:
      # HOST:CONTAINER
      - "8080:8080"
    restart: on-failure

  backstopjs_worker_chrome_balancer:
    image: dockercloud/haproxy:1.6.7
    links:
      - backstopjs_worker_chrome
    ports:
      - "8100:80"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  backstopjs_worker_chrome:
    build:
      context: ./backstopjs_worker
      dockerfile: Dockerfile-chrome
    image: brainsum/qashot_worker_backstopjs_chrome:0.2.9
    command: ["nodemon", "index.js"]
    environment:
      - NODE_ENV=development
      - WORKER_BROWSER=chrome
    volumes:
      - ./backstopjs_worker:/home/node/app
    depends_on:
      - frontend
#    ports:
#      # @todo: Do we need exposed ports?
#      # @todo: If yes, how can we automate this? Env variables?
#      # HOST:CONTAINER
#      - "8100-8102:8080"
    restart: on-failure

#  # @todo: Implement this.
#  backstopjs_worker_firefox:
#    build:
#      context: ./backstopjs_worker
#      dockerfile: Dockerfile-firefox
#    image: brainsum/qashot_worker_backstopjs_firefox:0.2.9
#    command: ["nodemon", "index.js"]
#    environment:
#      - NODE_ENV=development
#      - WORKER_BROWSER=firefox
#    volumes:
#      - ./backstopjs_worker:/home/node/app
#    depends_on:
#      - frontend
#    ports:
#    # @todo: Do we need exposed ports?
#    # @todo: If yes, how can we automate this? Env variables?
#    # HOST:CONTAINER
#    - "8150-8152:8080"
#    restart: on-failure
