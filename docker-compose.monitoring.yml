version: "3.7"

# See: https://github.com/vegasbrianc/prometheus/blob/master/docker-compose.yml

services:
  prometheus:
    image: prom/prometheus:v2.3.2
    container_name: "${PROJECT_NAME}_prometheus"
    restart: always
    depends_on:
    - cadvisor
    volumes:
    - prometheus_data:/prometheus
    - ./monitoring/prometheus/:/etc/prometheus/
    networks:
    - frontend_result_queue
    - monitoring
    - chrome_worker_monitoring
    - firefox_worker_monitoring
    - phantomjs_worker_monitoring
    - frontend_monitoring
    labels:
    - "traefik.enable=true"
    - "traefik.port=9090"
    - "traefik.backend=prometheus"
    - "traefik.frontend.rule=Host:prometheus.${PROJECT_BASE_URL}"
    - "traefik.docker.network=${PROJECT_NAME}_monitoring"

  grafana:
    image: grafana/grafana:5.2.4
    container_name: "${PROJECT_NAME}_grafana"
    restart: always
    depends_on:
    - prometheus
    volumes:
    - grafana_data:/var/lib/grafana
    - ./monitoring/grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
    - ./monitoring/grafana/config.monitoring
    networks:
    - monitoring
    labels:
    - "traefik.enable=true"
    - "traefik.port=3000"
    - "traefik.backend=grafana"
    - "traefik.frontend.rule=Host:grafana.${PROJECT_BASE_URL}"
    - "traefik.docker.network=${PROJECT_NAME}_monitoring"

  cadvisor:
    image: google/cadvisor:v0.31.0
    container_name: "${PROJECT_NAME}_cadvisor"
    restart: always
    ports:
    - 9500:8080
    volumes:
    - /:/rootfs:ro
    - /var/run:/var/run:rw
    - /sys:/sys:ro
    - /var/lib/docker/:/var/lib/docker:ro
    - /dev/disk/:/dev/disk:ro
    networks:
    - monitoring
    labels:
    - "traefik.enable=true"
    - "traefik.port=9500"
    - "traefik.backend=cadvisor"
    - "traefik.frontend.rule=Host:cadvisor.${PROJECT_BASE_URL}"
    - "traefik.docker.network=${PROJECT_NAME}_monitoring"

  node_exporter:
    image: prom/node-exporter:v0.16.0
    container_name: "${PROJECT_NAME}_node_exporter"
    volumes:
    - /proc:/host/proc:ro
    - /sys:/host/sys:ro
    - /:/rootfs:ro
    command:
    - "--path.procfs=/host/proc"
    - "--path.sysfs=/host/sys"
    - "--collector.filesystem.ignored-mount-points"
    - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    networks:
    - monitoring
    labels:
    - "traefik.enable=true"
    - "traefik.port=9100"
    - "traefik.backend=node-exporter"
    - "traefik.frontend.rule=Host:node-exporter.${PROJECT_BASE_URL}"
    - "traefik.docker.network=${PROJECT_NAME}_monitoring"
    restart: always

  alertmanager:
    image: prom/alertmanager:v0.15.2
    volumes:
    - ./monitoring/alertmanager/:/etc/alertmanager/
    networks:
    - monitoring
    restart: always
    command:
    - "--config.file=/etc/alertmanager/config.yml"
    - "--storage.path=/alertmanager"
    labels:
    - "traefik.port=9093"
    - "traefik.enable=true"
    - "traefik.backend=alertmanager"
    - "traefik.frontend.rule=Host:alertmanager.${PROJECT_BASE_URL}"
    - "traefik.docker.network=${PROJECT_NAME}_monitoring"

  mailhog:
    image: mailhog/mailhog:v1.0.0
    container_name: "${PROJECT_NAME}_mailhog"
    restart: always
    networks:
    - monitoring
    labels:
    - "traefik.enable=true"
    - "traefik.port=8025"
    - "traefik.backend=mailhog"
    - "traefik.frontend.rule=Host:mailhog.${PROJECT_BASE_URL}"
    - "traefik.docker.network=${PROJECT_NAME}_monitoring"

volumes:
  prometheus_data: {}
  grafana_data: {}

networks:
  monitoring: {}
